pipeline {
    agent any

    tools {
        maven 'maven-3.9.9'  
    }

    environment {
        JAVA_HOME = '/path/to/java21'  
        PATH = "${env.JAVA_HOME}/bin:${env.PATH}"
        registry = '137827796096.dkr.ecr.us-east-1.amazonaws.com/myrepo'
        registryCredential = 'jenkins-ecr-iam'
        dockerImage = ''
    }

    stages {
        stage('Checkout the Code') {
            steps {
                git url: 'https://github.com/keerthanaa-28/Springboot-mvn-project.git', branch: 'main'
            }
        }

        stage('Build the Code') {
            steps {
                sh 'mvn clean package -DskipTests'  
            }
        }

        stage('Sonar Quality Check') {
            steps {
                script {
                    withSonarQubeEnv(installationName: 'sonarqube-9', credentialsId: 'jenkins-sonar-token') {
                        sh 'mvn sonar:sonar -Dsonar.projectKey=springboot-mvn-project'
                    }

                    timeout(time: 1, unit: 'HOURS') {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to Quality Gate failure: ${qg.status}"
                        }
                    }
                }
            }
        }

        stage('Building Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${registry}:$BUILD_NUMBER")
                }
            }
        }

        stage('Deploy Docker Image') {
            steps {
                script {
                    docker.withRegistry("https://${registry}", "ecr:us-east-1:${registryCredential}") {
                        dockerImage.push()
                    }
                }
            }
        }
    }
}
